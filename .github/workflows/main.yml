name: CI pipeline
on: 
    push:
      branches: 
        - "main"
        - "feature/*"
    

jobs:
    
    # Testing:
    #     strategy:
    #         matrix:
    #             project: [backend,frontend]

    #     defaults:
    #         run:
    #             working-directory: CI/${{ matrix.project }}

    #     runs-on: ubuntu-latest
    #     steps:
    #     - name: Checkout the code
    #       uses: actions/checkout@v5.0.0
        

    #     - name: SonarQube Scan
    #       uses: sonarsource/sonarqube-scan-action@v1.2.0
    #       with:
    #         projectBaseDir: .
    #         args: >
    #           -Dsonar.projectKey=islamic-app
    #           -Dsonar.sources=.
    #       env:
    #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    Build-Scan-Push:
        # needs: Testing
        strategy:
          matrix:
            project: [backend,frontend]

        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: CI/${{ matrix.project }}

        steps:

          - name: Checkout the code
            uses: actions/checkout@v5.0.0

          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
                username: ${{ vars.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

          - name: Build and push
            uses: docker/build-push-action@v6
            with:
                context: CI/${{ matrix.project }}
                push: false
                tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ matrix.project }}:${{ github.sha }}

          # - name: Scan Docker image with Trivy
          #   uses: aquasecurity/trivy-action@0.28.0
          #   with:
          #       image-ref: ${{ vars.DOCKERHUB_USERNAME }}/${{ matrix.project }}:${{ github.sha }}
          #       format: table
          #       ignore-unfixed: true
          #       vuln-type: os,library
          #       severity: CRITICAL,HIGH
          #   continue-on-error: true

          - name: Push Docker image
            uses: docker/build-push-action@v6
            with:
                context: CI/${{ matrix.project }}
                push: true
                tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ matrix.project }}:${{ github.sha }}


    Deploy:
      needs: Build-Scan-Push
      permissions:
        contents: write
      runs-on: ubuntu-latest

      steps:
        - name: Checkout the code
          uses: actions/checkout@v5
          with:
            fetch-depth: 0

        - uses: cschleiden/replace-tokens@v1 
          with:
            tokenPrefix: '{'
            tokenSuffix: '}'
            files: |
              ["CI/K8s/Deployments/backend-deploy.yaml",
              "CI/K8s/Deployments/frontend-deploy.yaml"]
          env:
            backend_image: ${{ vars.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}
            frontend_image: ${{ vars.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}

        - name: Commit and push both changes
          run: |
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add CI/K8s/Deployments/*
            git commit -m "Update backend & frontend images to ${{ github.sha }}" || echo "No changes to commit"
            git pull --rebase origin main
            git push origin HEAD:main
          env:
            GITHUB_TOKEN: ${{ secrets.GH_PAT }}
